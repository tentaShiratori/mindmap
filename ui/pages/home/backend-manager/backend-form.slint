
import { LineEdit , ComboBox, HorizontalBox, GroupBox, VerticalBox, Button, GridBox} from "std-widgets.slint";
import {BackendRepository,BackendDraft,BackendType} from "../../../singletons/backend_repository.slint";
import {LocalBackendRepository} from "../../../singletons/local_backend_repository.slint";

export component BackendForm {
    property <string> name <=> nameElm.text;
    property <string> type <=> typeElm.current-value; 
    property <string> path <=> pathElm.text; 
    property <string> errorText;

    property <{err:bool, result: string}> backendAddResult;
    
    function clearHandleSubmitVariables() {
        backendAddResult = {err:true, result:""};
    }

    init => {
        clearHandleSubmitVariables();
    }

    function handleSubmit(){
        if(type=="Local"){
            backendAddResult = BackendRepository.add({
                name: name,
                type: BackendType.Local
            });
            if(backendAddResult.err){
                errorText = "Any errors occured."
            }
            debug(backendAddResult.result);
            if(!LocalBackendRepository.edit({backend_id: backendAddResult.result, path: path})){
                errorText = "Any errors occured.";
            }
        }

        clearHandleSubmitVariables();
    }
    VerticalBox {
        HorizontalBox {
            alignment: start;
            GroupBox {
                title: "Name";
                nameElm := TextInput {
                    single-line: false;
                    accepted() => {debug("Enter");}
                }
            }
            GroupBox {
                title: "Type";
                typeElm := ComboBox {
                    model: ["Local"];
                }
            }
        }
        HorizontalBox {
            GroupBox {
                title: "Path";
                pathElm := LineEdit {}
            }
        }
        if errorText != "": HorizontalBox{
            Text{text: errorText;}
        }
        HorizontalBox {
            alignment: start;
            Button {
                text: "Save";
                clicked=>{handleSubmit()}
            }
        }
    }
}